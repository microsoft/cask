// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

namespace CommonAnnotatedSecurityKeys;

internal enum BytewiseKeyKind : byte
{
    /// <summary>
    /// Specifies a 256-bit primary API or other security key. The enum
    /// value '0' comprises the base64 index that maps to character 'A'.
    /// </summary>
    Key256Bit = ('A' - 'A') << 2, // Base64 index 0 == 'A'

    /// <summary>
    /// Specifies a CASK hashed signature that incorporates a Message
    /// Authentication code of a derivation input generated by SHA-256.
    /// </summary>
    Hash256Bit = ('H' - 'A') << 2, // Base64 index 7 == 'H', << 2 == 28, 0x1c, 0b000 11100

    /// <summary>
    /// Specifies a CASK hashed signature that incorporates a Message
    /// Authentication code of a derivation input generated by SHA-384.
    /// </summary>
    Hash384Bit = ('I' - 'A') << 2, // Base64 index 7 == 'H', << 2 == 32, 0x20, 0b0010 0000
}

internal enum EncodedKeyKind : byte
{
    /// <summary>
    /// Specifies a 256-bit primary API or other security key. The enum
    /// value '0' comprises the base64 index that maps to character 'A'.
    /// </summary>
    Key256Bit = 'A' - 'A', // Base64 index 0 == 'A'

    /// <summary>
    /// Specifies a CASK hashed signature that incorporates a Keyed Hash
    /// Message Authenticode of a derivation input generated by SHA-256
    /// (HMAC-SHA-256) along with other CASK data such as the generated
    /// C3ID of the CASK key used to initialize the HMAC instance.
    /// </summary>
    Hash256Bit = 'H' - 'A', // Base64 index 7 == 'H', 7, 0x7, 0b0111

    /// <summary>
    /// Specifies a CASK hashed signature that incorporates a Keyed Hash
    /// Message Authenticode of a derivation input generated by SHA-384
    /// (HMAC-SHA-384) along with other CASK data such as the generated
    /// C3ID of the CASK key used to initialize the HMAC instance.
    /// </summary>
    Hash384Bit = 'I' - 'A', // Base64 index 7 == 'I', 8, 0x8, 0b1000
}

